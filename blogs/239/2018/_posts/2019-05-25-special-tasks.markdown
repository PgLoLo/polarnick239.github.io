---
layout: ru/blogs/239/2018/post
title:  "Идеи проектов на лето"
date:   2019-05-25 0:02:39 +0300
lang:   ru
categories: school239_105_2018_2019
---

Если хотите что-то попрограммировать летом и у вас нет идеи для проекта, то можете взять одну из следующих идей.

Я готов помочь вам с ниже предложенными или вашими собственными идеями - будь-то написать небольшую вводную статью как подступиться, будь-то помочь с проблемными местами - просто напишите что вам это интересно и хватит упорства потратить не один день-вечер-ночь.

P.S. Я постараюсь в ближайшие пару недель накидать еще идей.

1) Конвертер картинки в ASCII-текст
======

Можно произвольную картинку попробовать приблизить текстовыми буквами:

<img src="/static/2019/05/unicorn.jpg" width="200"/> <img src="/static/2019/05/unicorn_ascii.jpg" width="200"/>

Грубо говоря основная идея - пусть мы заменяем сразу квадратики 10x10 пикселей на один символ. Какой символ выбрать для конкретного квадратика? Достаточно посчитать насколько светлый в среднем квадратик и выбрать среди символов близкий по яркости символ. Например если квадрат очень светлый - то идеальный символ это просто символ пробела, а если квадрат очень темный - то например подойдет символ #.

2) Самописный OpenGL
======

[Шикарная статья на хабре](https://habr.com/ru/post/248153/), в ней про $$C++$$, но на самом деле это не принципиально и вы можете это сделать на $$Java$$, если на чем-то застреваете или проблемы в языковом барьере - смело пишите.

<img src="https://hsto.org/getpro/habr/post_images/d1b/019/154/d1b019154c65deedcc6e6f66f33951de.png" width="200"/>

3) Самописный 2D-физический движок
======

Не читал, но выглядит [хорошей статьей на хабре](https://habr.com/ru/post/336908/) (и [части 2-4](https://habr.com/ru/post/341540/)):

<img src="/static/2019/05/physics2d.jpg" width="200"/>

4) Двумерные тени
======

Вы можете сделать тени подобные [этим](/old/webgl/demos/multiple_shadows.html):

<img src="/static/2019/05/shadows.jpg" width="200"/>

Ключевая идея - от точки наблюдения под все углы направления пустить воображаемые лучи и найти минимальное расстояние, все пиксели которые дальше этого расстояния - закрасить черным. Если звучит не понятно, но интересно и вдохновляюще - пишите, распишу подробнее.

5) Красота математического хаоса
======

Вы можете сделать [вот такую красоту](https://www.youtube.com/watch?v=fDSIRXmnVvk):

<img src="/static/2019/05/chaos.jpg" width="200"/>

6) Маршировка кубов
======

Можете нарисовать математикой красивые трехмерные сцены методом маршировки кубов навроде [такого](http://polarnick.com/old/webgl/demos/raymarching/primitives.html):

<img src="/static/2019/05/cubes_marching.jpg" width="200"/>

Ключевая идея - давайте начнем пускать из каждого пикселя экрана луч и посчитаем минимальное расстояние до всех объектов в нашей сцене, шагнем по лучу на это расстояние, опять посчитаем минимальное расстояние, опять шагнем и так далее пока не упремся в один из объектов. Когда уперлись - поняли что в этом пикселе цвет соответствующий этому объекту.

7) Изучить **Brainfuck** и написать на нем сортировку
======

Даже статья уже [есть](http://polarnick.com/lessons/239/lesson/school/brainfuck/2017/03/14/Brainfuck.html). 
