---
layout: 239post
title:  "Мини-задание 239: brainfuck"
date:   2017-03-14 12:00:00 +0300
categories: 239 lesson school brainfuck
---

Brainfuck - эзотерический язык программирования. Он не используется как удобный инструмент решения практических задач (ввиду своей неудобности и непрактичности), но решать простые задачи на нем может быть интересно и полезно - так же как решать любую головоломку.
К тому же brainfuck является наглядным примером [тьюринг-полного](https://ru.wikipedia.org/wiki/%D0%9F%D0%BE%D0%BB%D0%BD%D0%BE%D1%82%D0%B0_%D0%BF%D0%BE_%D0%A2%D1%8C%D1%8E%D1%80%D0%B8%D0%BD%D0%B3%D1%83) языка.

Описание и синтаксис
--------------------

В этом языке нет переменных и функций, модель языка гораздо проще:

Есть большой массив 8-битных значений (т.е. каждый элемент от 0 до 255) - так называемая лента памяти. Есть указатель на ячейку памяти. При запуске программы он указывает на первую ячейку. Значения всех ячеек в момент запуска программы равны нулю.

Команды языка brainfuck:

 - ```>``` - сдвинуть указатель ячейки памяти вправо к следующей ячейке
 - ```<``` - сдвинуть указатель ячейки памяти влево к предыдущей ячейке
 - ```+``` - увеличить значение текущей ячейки на 1
 - ```-``` - уменьшить значение текущей ячейки на 1
 - ```.``` - напечатать символ из текущей ячейки в соответствии с [ASCII-таблицей](http://www.asciitable.com/)
 - ```,``` - считать в текущую ячейку символ из консоли
 - ```[``` - если значение текущей ячейки ноль, то перейти вперёд по тексту программы на команду, следующую за соответствующей ```]```, иначе продолжить исполнение
 - ```]``` - если значение текущей ячейки не ноль, то вернуться назад на команду, следующую за соответствующей ```[```, иначе продолжить исполнение

Интерпретатор
-------------

Интерпретатор написать очень просто, их существует очень много. Например есть интерпретатор с визуализацией доступный [из браузера](http://fatiherikli.github.io/brainfuck-visualizer/). Или другой интепретатор тоже [из браузера](https://copy.sh/brainfuck/), но этот вычисляет быстро.

Как с этим жить
----------------------------

Давайте подумаем как напечатать тривиальный ```Hello world```.

Для начала нам надо руководствуясь [ASCII-таблицей](http://www.asciitable.com/) понять, какие это символы в представлении ASCII-кодов:

```Hello world``` = ```72, 101, 108, 108, 111, 32, 119, 111, 114, 108, 100```
  
P.S. Это можно делать не обязательно глазами и руками, а например с помощью [онлайн-конвертера](https://www.easycalculation.com/ascii-hex.php)

Можно было бы напечатать огромное число операций ```+``` (и небольшое количество ```.```) и напечатать заветный ```Hello world```, но можно воспользоваться умножением и циклами:

```java
                // H = 72 = 9*8
                // Давайте в первой ячейке положим число 9
+++++++++
[               // Этот блок кода будет выполняться пока в текущей ячейке не ноль (в данном случае текущая = первая)

                // И будем 9 раз увеличивать вторую ячейку на 8
                // Тогда во второй ячейке окажется 72 а это та буква которая нам нужна

    >           // Переходим ко второй ячейке
    ++++++++    // Увеличиваем ее на 8
    <           // Возвращаемся к первой ячейке
    -           // Уменьшаем ее на единицу ведь еще одна итерация прошла успешно
]
                // Раз мы пришли сюда значит цикл исполнился 9 раз значит во второй ячейке лежит 72 проверяем:
>               // Переходим ко второй ячейке
.               // Выводим символ

                // Дальше в том же духе
```

Заметим, что можно сэкономить, ведь при переходе от буквы ```e``` к ```l``` (т.е. от ```101``` к ```108```) достаточно увеличить значение всего лишь на 7, а третья и четвертая буквы совпадают.

Упражнение 1
------------

```Условие:``` Выведите ```Hello world```

Упражнение 2
------------

```Условие:``` Выведите английский алфавит (заглавные буквы): ```ABCDEFGHIJKLMNOPQRSTUVWXYZ```

Комментарии:

 - Обратите внимание, что английские буквы в [ASCII-таблице](http://www.asciitable.com/) - символы от ```65``` до ```90``` (```26``` символов).
 - Попробуйте минимизировать число инструкций ([онлайн счетавод символов](http://simvoli.net/), пробелы в исходном коде за символы не считаются)
 - Посоревнуйтесь с друзьями у кого программа короче (у меня заняло ```38``` инструкций)
 
Упражнение 3
------------

```Условие:``` Пользователь вводит два символа - выведите наименьший

Комментарии:

 - Пример выводящий второй введенный символ: ```,>,.```
 - Пример выводящий первый введенный символ: ```,>,<.```
 - Придумайте сначала как сделать операцию ```Если текущая ячейка == 0, то делаем А```
 - ```Спойлер1.1``` про предыдущий комментарий: сохраните в ячейках справа от текущей ячейки значения: ```0, 1, 0```
 - ```Спойлер1.2``` осознайте почему этот код работает: ```[>]>>[ A >]``` (взято с [хабра](https://habrahabr.ru/post/135561/))
 - ```Спойлер1.3``` чтобы убедиться что вы осознали эти спойлеры - откройте интерпретатор и не подглядывая сюда решите это упражнение


Упражнение 4
------------
 
```Условие:``` Пользователь вводит буквы одну за другой, пока не введет символ точки (код ```46```). Выведите введенные символы в алфавитном порядке (с повторениями)

Комментарии:

 - Попробуйте алгоритм ```ищем максимум, поднимаем его вверх``` или ```делаем n^2 сравнений соседей, если они в неправильном порядке - swap между собой``` или ```сортировкой подсчетом```
 - Поймите сколько вам нужно было бы переменных, и оставьте между хранящамися на ленте символами зазор в столько ячеек, сколько вам нужно переменных
 - Пока вы будете реализовывать - постоянно будет оказываться что зазор надо было брать больше, так что удобнее брать зазор с запасом :)
